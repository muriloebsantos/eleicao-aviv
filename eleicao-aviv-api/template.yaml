AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for cashflow-api
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'Content-Type, Authorization'"
      AllowOrigin: "'*'"

Resources:
  EleicaoAvivApi:
      Type: AWS::Serverless::Api
      Properties:
        Name: Eleição AVIV API
        StageName: prod
        Auth:
          AddDefaultAuthorizerToCorsPreflight: false
          DefaultAuthorizer: MyLambdaTokenAuthorizer
          Authorizers:
            MyLambdaTokenAuthorizer:
              FunctionArn: !GetAtt AuthHandlerFunction.Arn

  AppSettingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: eleicao_aviv_settings
        BillingMode: PAY_PER_REQUEST 
        AttributeDefinitions:
            -
              AttributeName: "config_name"
              AttributeType: "S"
            -
              AttributeName: "config_value"
              AttributeType: "S"
        KeySchema:
            -
              AttributeName: "config_name"
              KeyType: "HASH"
            -
              AttributeName: "config_value"
              KeyType: "RANGE"
       
  AuthHandlerFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app
      Handler: ./src/functions/authHandlerFunction.handler
      Runtime: nodejs14.x
      MemorySize: 256

  TestFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/testFunction.lambdaHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /test
            Method: get
            RestApiId: !Ref EleicaoAvivApi

  InserirEleicaoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/eleicaoFunction.inserirEleicaoHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /eleicoes
            Method: post
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE #TODO: remover para autenticar

  AtualizarEleicaoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/eleicaoFunction.atualizarEleicaoHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /eleicoes/{id}
            Method: put
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE

  ObterEleicaoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/eleicaoFunction.obterEleicaoHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /eleicoes/{id}
            Method: get
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE

  ListarEleicoesFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/eleicaoFunction.listarEleicoesHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /eleicoes
            Method: get
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE


  InserirCandidatoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/candidatoFunction.inserirCandidatoHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /candidatos
            Method: post
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE #TODO: remover para autenticar

  ObterCandidatoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/candidatoFunction.obterCandidatoHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /candidatos/{id}
            Method: get
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE

  AtualizarCandidatoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/candidatoFunction.atualizarCandidatoHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /candidatos/{id}
            Method: put
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE

  ListarCandidatosFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/candidatoFunction.listarCandidatosHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /candidatos
            Method: get
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE

  InserirCargoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/cargoFunction.inserirCargoHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /cargos
            Method: post
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE #TODO: remover para autenticar

  ObterCargoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/cargoFunction.obterCargoHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /cargos/{id}
            Method: get
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE

  AtualizarCargoFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/cargoFunction.atualizarCargoHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /cargos/{id}
            Method: put
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE

  ListarCargosFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/cargoFunction.listarCargosHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /cargos
            Method: get
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE

  ListarCargoCandidatosFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/cargoCandidatoFunction.listarCargoCandidatosHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /cargos/{id}/candidatos
            Method: get
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE
  
  UploadFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: app/dist
      Handler: ./functions/uploadFunction.uploadHandler
      Runtime: nodejs14.x
      MemorySize: 256
      Policies:
        - arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Events:
        ApiGatewayEvent:
          Type: Api 
          Properties:
            Path: /upload
            Method: get
            RestApiId: !Ref EleicaoAvivApi
            Auth:
              Authorizer: NONE

      
  

  
